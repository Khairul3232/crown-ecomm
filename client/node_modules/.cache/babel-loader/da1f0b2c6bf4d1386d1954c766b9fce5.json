{"ast":null,"code":"import { takeEvery, call } from 'redux-saga/effects';\nimport ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nexport function* fetchCollectionsAsync() {\n  yield console.log('I am HERE');\n  const collectionRef = firestore.collection('collections');\n  const snapshot = yield collectionRef.get();\n  const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot); // dispatch(fetchCollectionsStart());\n  // collectionRef.get().then(snapshot => { \n  //     // console.log(\"snapshot: \",snapshot);\n  //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //     // console.log(\"collectionsMap: \", collectionsMap);\n  //     // updateCollections(collectionsMap);\n  //     dispatch(fetchCollectionsSuccess(collectionsMap));\n  //     // this.setState({ loading: false });\n  // }).catch(error=>dispatch(fetchCollectionsFailure(error)));\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/khairul/Documents/Projects/crn/crown-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,QAAgC,oBAAhC;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,gBAAjE;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMC,OAAO,CAACC,GAAR,CAAY,WAAZ,CAAN;AAEA,QAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AACA,QAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,QAAMC,cAAc,GAAG,MAAMb,IAAI,CAACG,+BAAD,EAAkCQ,QAAlC,CAAjC,CALqC,CAOjC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEP;AAED,OAAO,UAAUG,qBAAV,GAAkC;AACrC,QAAMf,SAAS,CAACE,eAAe,CAACc,uBAAjB,EAAyCT,qBAAzC,CAAf;AACH","sourcesContent":["import { takeEvery, call } from 'redux-saga/effects';\n\nimport ShopActionTypes from './shop.types';\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\n\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\n\nexport function* fetchCollectionsAsync() {\n    yield console.log('I am HERE');\n\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n\n        // dispatch(fetchCollectionsStart());\n\n        // collectionRef.get().then(snapshot => { \n        //     // console.log(\"snapshot: \",snapshot);\n        //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n        //     // console.log(\"collectionsMap: \", collectionsMap);\n        //     // updateCollections(collectionsMap);\n        //     dispatch(fetchCollectionsSuccess(collectionsMap));\n        //     // this.setState({ loading: false });\n        // }).catch(error=>dispatch(fetchCollectionsFailure(error)));\n    \n}\n\nexport function* fetchCollectionsStart() {\n    yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START,fetchCollectionsAsync);\n}"]},"metadata":{},"sourceType":"module"}