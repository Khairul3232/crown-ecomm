{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/khairul/Documents/Projects/crn/crown-clothing/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport HomePage from './pages/homepage/homepage.component';\nimport { Switch, Route } from 'react-router-dom';\nimport ShopPage from './pages/shop/shop.component';\nimport Header from './components/header/header.component';\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils';\nimport { connect } from 'react-redux';\nimport { setCurrentUser } from './redux/user/user.actions';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromAuth = null;\n  }\n\n  componentDidMount() {\n    const {\n      setCurrentUser\n    } = this.props;\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth); // check if db has updated at that reference with the data, because we need to update state with id, and other info\n\n        userRef.onSnapshot(snapShot => {\n          setCurrentUser({\n            id: snapShot.id,\n            ...snapShot.data()\n          });\n        });\n      } else {\n        setCurrentUser(userAuth);\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: HomePage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/shop\",\n          component: ShopPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signin\",\n          component: SignInAndSignUpPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n});\n\nexport default connect(null, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/khairul/Documents/Projects/crn/crown-clothing/src/App.js"],"names":["React","HomePage","Switch","Route","ShopPage","Header","SignInAndSignUpPage","auth","createUserProfileDocument","connect","setCurrentUser","App","Component","unsubscribeFromAuth","componentDidMount","props","onAuthStateChanged","userAuth","userRef","onSnapshot","snapShot","id","data","componentWillUnmount","render","mapDispatchToProps","dispatch","user"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,qCAArB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;AACA,OAAOC,QAAP,MAAqB,6BAArB;AAEA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,mBAAP,MAAgC,2DAAhC;AACA,SAASC,IAAT,EAAcC,yBAAd,QAA+C,2BAA/C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,2BAA/B;;AAEA,MAAMC,GAAN,SAAkBX,KAAK,CAACY,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAEhCC,mBAFgC,GAEV,IAFU;AAAA;;AAIhCC,EAAAA,iBAAiB,GAAG;AAElB,UAAM;AAAEJ,MAAAA;AAAF,QAAqB,KAAKK,KAAhC;AAEA,SAAKF,mBAAL,GAA2BN,IAAI,CAACS,kBAAL,CAAwB,MAAMC,QAAN,IAAkB;AAEnE,UAAIA,QAAJ,EAAc;AACZ,cAAMC,OAAO,GAAG,MAAMV,yBAAyB,CAACS,QAAD,CAA/C,CADY,CAGZ;;AACAC,QAAAA,OAAO,CAACC,UAAR,CAAmBC,QAAQ,IAAI;AAC7BV,UAAAA,cAAc,CAAC;AACXW,YAAAA,EAAE,EAAED,QAAQ,CAACC,EADF;AAEX,eAAGD,QAAQ,CAACE,IAAT;AAFQ,WAAD,CAAd;AAID,SALD;AAMD,OAVD,MAWK;AACHZ,QAAAA,cAAc,CAACO,QAAD,CAAd;AACD;AAEF,KAjB0B,CAA3B;AAkBD;;AAEDM,EAAAA,oBAAoB,GAAG;AACrB,SAAKV,mBAAL;AACD;;AAEDW,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAsB,UAAA,SAAS,EAAEvB;AAAjC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,SAAS,EAAEG;AAA/B;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,SAAZ;AAAsB,UAAA,SAAS,EAAGE;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AA3C+B;;AA8ClC,MAAMmB,kBAAkB,GAAGC,QAAQ,KAAK;AACtChB,EAAAA,cAAc,EAAEiB,IAAI,IAAID,QAAQ,CAAChB,cAAc,CAACiB,IAAD,CAAf;AADM,CAAL,CAAnC;;AAIA,eAAelB,OAAO,CAAC,IAAD,EAAMgB,kBAAN,CAAP,CAAiCd,GAAjC,CAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport HomePage from './pages/homepage/homepage.component';\nimport { Switch, Route } from 'react-router-dom';\nimport ShopPage from './pages/shop/shop.component';\n\nimport Header from './components/header/header.component';\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';\nimport { auth,createUserProfileDocument } from './firebase/firebase.utils';\nimport { connect } from 'react-redux';\nimport { setCurrentUser } from './redux/user/user.actions';\n\nclass App extends React.Component {\n\n  unsubscribeFromAuth = null;\n\n  componentDidMount() { \n\n    const { setCurrentUser } = this.props;\n\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => { \n      \n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);\n\n        // check if db has updated at that reference with the data, because we need to update state with id, and other info\n        userRef.onSnapshot(snapShot => { \n          setCurrentUser({\n              id: snapShot.id,\n              ...snapShot.data()\n          });\n        });\n      }\n      else {\n        setCurrentUser(userAuth);\n      }\n\n    });\n  }\n\n  componentWillUnmount() { \n    this.unsubscribeFromAuth();\n  }\n\n  render() { \n    return (\n      <div>\n        <Header/>\n        <Switch>\n          <Route exact path='/' component={HomePage} />\n          <Route path='/shop' component={ShopPage} />\n          <Route path='/signin' component={ SignInAndSignUpPage } />\n        </Switch>      \n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n});\n\nexport default connect(null,mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}