{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/khairul/Documents/Projects/crn/crown-clothing/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { selectCollections } from '../../redux/shop/shop.selectors';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.components';\nimport { Route } from 'react-router-dom';\nimport CollectionPage from '../collection/collection.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { connect } from 'react-redux';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\n_c = CollectionsOverviewWithSpinner;\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n_c2 = CollectionPageWithSpinner;\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collection');\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      console.log(\"snapshot: \", snapshot); // const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      // // console.log(\"collectionsMap: \", collectionsMap);\n      // updateCollections(collectionsMap);\n      // this.setState({ loading: false });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionsOverviewWithSpinner, {\n          isLoading: loading,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 72\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionPageWithSpinner, {\n          isLoading: loading,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 80\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectionsOverviewWithSpinner\");\n$RefreshReg$(_c2, \"CollectionPageWithSpinner\");","map":{"version":3,"sources":["/Users/khairul/Documents/Projects/crn/crown-clothing/src/pages/shop/shop.component.jsx"],"names":["React","selectCollections","CollectionsOverview","Route","CollectionPage","firestore","convertCollectionsSnapshotToMap","connect","updateCollections","WithSpinner","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","console","log","render","match","path","mapDispatchToProps","dispatch","collectionsMap"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,iCAAlC;AAEA,OAAOC,mBAAP,MAAgC,uEAAhC;AAEA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,MAAMC,8BAA8B,GAAGD,WAAW,CAACP,mBAAD,CAAlD;KAAMQ,8B;AACN,MAAMC,yBAAyB,GAAGF,WAAW,CAACL,cAAD,CAA7C;MAAMO,yB;;AAEN,MAAMC,QAAN,SAAuBZ,KAAK,CAACa,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACnCC,KADmC,GAC3B;AACJC,MAAAA,OAAO,EAAE;AADL,KAD2B;AAAA,SAInCC,uBAJmC,GAIT,IAJS;AAAA;;AAMnCC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAET,MAAAA;AAAF,QAAwB,KAAKU,KAAnC;AACA,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,YAArB,CAAtB;AAEA,SAAKJ,uBAAL,GAA+BG,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACtEC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBF,QAAzB,EADsE,CAEtE;AACA;AACA;AACA;AACH,KAN8B,CAA/B;AAOH;;AAEDG,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKR,KAAvB;AACA,UAAM;AAAEH,MAAAA;AAAF,QAAc,KAAKD,KAAzB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAEY,KAAK,CAACC,IAAK,EAAjC;AAAoC,QAAA,MAAM,EAAGT,KAAD,iBAAW,QAAC,8BAAD;AAAgC,UAAA,SAAS,EAAGH,OAA5C;AAAA,aAA0DG;AAA1D;AAAA;AAAA;AAAA;AAAA;AAAvD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAG,GAAEQ,KAAK,CAACC,IAAK,gBAA3B;AAA4C,QAAA,MAAM,EAAGT,KAAD,iBAAW,QAAC,yBAAD;AAA2B,UAAA,SAAS,EAAGH,OAAvC;AAAA,aAAqDG;AAArD;AAAA;AAAA;AAAA;AAAA;AAA/D;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AA5BkC;;AA+BvC,MAAMU,kBAAkB,GAAGC,QAAQ,KAAK;AACpCrB,EAAAA,iBAAiB,EAAEsB,cAAc,IAAID,QAAQ,CAACrB,iBAAiB,CAACsB,cAAD,CAAlB;AADT,CAAL,CAAnC;;AAIA,eAAevB,OAAO,CAAC,IAAD,EAAOqB,kBAAP,CAAP,CAAkChB,QAAlC,CAAf","sourcesContent":["import React from 'react';\nimport { selectCollections } from '../../redux/shop/shop.selectors';\n\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.components';\n\nimport { Route } from 'react-router-dom';\n\nimport CollectionPage from '../collection/collection.component';\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\n\nimport { connect } from 'react-redux';\n\nimport { updateCollections } from '../../redux/shop/shop.actions';\n\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component { \n    state = {\n        loading: true\n    };\n    unsubscribeFromSnapshot = null;\n\n    componentDidMount() { \n        const { updateCollections } = this.props;\n        const collectionRef = firestore.collection('collection');\n\n        this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => { \n            console.log(\"snapshot: \",snapshot);\n            // const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n            // // console.log(\"collectionsMap: \", collectionsMap);\n            // updateCollections(collectionsMap);\n            // this.setState({ loading: false });\n        });\n    }\n\n    render() {\n        const { match } = this.props;\n        const { loading } = this.state;\n        return (\n            <div className='shop-page'>\n                <Route exact path={`${match.path}`} render={(props) => <CollectionsOverviewWithSpinner isLoading={ loading } {...props} /> } />\n                <Route path={`${match.path}/:collectionId`} render={(props) => <CollectionPageWithSpinner isLoading={ loading } {...props} />} />\n            </div>\n        );\n    }\n} \n\nconst mapDispatchToProps = dispatch => ({\n    updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}