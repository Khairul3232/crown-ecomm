{"ast":null,"code":"import { combineReducers } from 'redux';\nimport userReducer from './user/user.reducer';\nimport cartReducer from './cart/cart.reducer';\nimport directoryReducer from './directory/directory.reducer';\nimport { persistReducer } from 'redux-persist'; // the actual localStorage object\n\nimport storage from 'redux-persist/lib/storage'; // alternatively\n// import sessionStorage from 'redux-persist/lib/storage';\n\nimport shopReducer from './shop/shop.reducer'; // json object that represents the possible configs for redux-persist\n\nconst persistConfig = {\n  key: 'root',\n  // at what point in our reducer store, do we want to store everything\n  storage,\n  whitelist: ['cart'] // array containing the string names of any of the reducer you want to store\n\n}; // set this as root reducer\n\nconst rootReducer = combineReducers({\n  user: userReducer,\n  cart: cartReducer,\n  directory: directoryReducer,\n  shop: shopReducer\n});\nexport default persistReducer(persistConfig, rootReducer);","map":{"version":3,"sources":["/Users/khairul/Documents/Projects/crn/crown-clothing/src/redux/root-reducer.js"],"names":["combineReducers","userReducer","cartReducer","directoryReducer","persistReducer","storage","shopReducer","persistConfig","key","whitelist","rootReducer","user","cart","directory","shop"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AAEA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AAEA,SAASC,cAAT,QAA+B,eAA/B,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,2BAApB,C,CAEA;AACA;;AAEA,OAAOC,WAAP,MAAwB,qBAAxB,C,CAGA;;AACA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,MADa;AACL;AACbH,EAAAA,OAFkB;AAGlBI,EAAAA,SAAS,EAAE,CAAC,MAAD,CAHO,CAGE;;AAHF,CAAtB,C,CAMA;;AACA,MAAMC,WAAW,GAAGV,eAAe,CAAC;AAChCW,EAAAA,IAAI,EAAEV,WAD0B;AAEhCW,EAAAA,IAAI,EAAEV,WAF0B;AAGhCW,EAAAA,SAAS,EAAEV,gBAHqB;AAIhCW,EAAAA,IAAI,EAAER;AAJ0B,CAAD,CAAnC;AAOA,eAAeF,cAAc,CAACG,aAAD,EAAgBG,WAAhB,CAA7B","sourcesContent":["import { combineReducers } from 'redux';\n\nimport userReducer from './user/user.reducer';\nimport cartReducer from './cart/cart.reducer';\nimport directoryReducer from './directory/directory.reducer';\n\nimport { persistReducer } from 'redux-persist';\n\n// the actual localStorage object\nimport storage from 'redux-persist/lib/storage';\n\n// alternatively\n// import sessionStorage from 'redux-persist/lib/storage';\n\nimport shopReducer from './shop/shop.reducer';\n\n\n// json object that represents the possible configs for redux-persist\nconst persistConfig = {\n    key: 'root', // at what point in our reducer store, do we want to store everything\n    storage,      \n    whitelist: ['cart'] // array containing the string names of any of the reducer you want to store\n}\n\n// set this as root reducer\nconst rootReducer = combineReducers({\n    user: userReducer,\n    cart: cartReducer,\n    directory: directoryReducer,\n    shop: shopReducer\n});\n\nexport default persistReducer(persistConfig, rootReducer);\n"]},"metadata":{},"sourceType":"module"}