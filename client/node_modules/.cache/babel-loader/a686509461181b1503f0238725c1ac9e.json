{"ast":null,"code":"export const addItemToCart = (allExistingCartItems, cartItemToAdd) => {\n  const doesCartItemExist = allExistingCartItems.find(cartItem => cartItem.id === cartItemToAdd.id);\n\n  if (doesCartItemExist) {\n    return allExistingCartItems.map(cartItem => cartItem.id === cartItemToAdd.id ? { ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  }\n\n  return [...allExistingCartItems, { ...cartItemToAdd,\n    quantity: 1\n  }];\n};\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\n  const existingCartItemFound = cartItems.find(cartItem => cartItem.id === cartItemToRemove.id);\n\n  if (existingCartItemFound.quantity === 1) {\n    return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id);\n  }\n\n  return cartItems.map(cartItem => cartItem.id === cartItemToRemove.id ? { ...cartItem,\n    quantity: cartItem.quantity - 1\n  } : cartItem);\n};","map":{"version":3,"sources":["/Users/khairul/Documents/Projects/crn/crown-clothing/client/src/redux/cart/cart.utils.js"],"names":["addItemToCart","allExistingCartItems","cartItemToAdd","doesCartItemExist","find","cartItem","id","map","quantity","removeItemFromCart","cartItems","cartItemToRemove","existingCartItemFound","filter"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAG,CAACC,oBAAD,EAAuBC,aAAvB,KAAyC;AAClE,QAAMC,iBAAiB,GAAGF,oBAAoB,CAACG,IAArB,CACtBC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EADpB,CAA1B;;AAIA,MAAIH,iBAAJ,EAAuB;AACnB,WAAOF,oBAAoB,CAACM,GAArB,CAAyBF,QAAQ,IACpCA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EAA9B,GAAmC,EAAE,GAAGD,QAAL;AAAeG,MAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AAA7C,KAAnC,GACMH,QAFH,CAAP;AAIH;;AAED,SAAO,CAAC,GAAGJ,oBAAJ,EAA0B,EAAE,GAAGC,aAAL;AAAoBM,IAAAA,QAAQ,EAAE;AAA9B,GAA1B,CAAP;AACH,CAbM;AAeP,OAAO,MAAMC,kBAAkB,GAAG,CAACC,SAAD,EAAYC,gBAAZ,KAAiC;AAC/D,QAAMC,qBAAqB,GAAGF,SAAS,CAACN,IAAV,CAC1BC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBK,gBAAgB,CAACL,EADnB,CAA9B;;AAIA,MAAIM,qBAAqB,CAACJ,QAAtB,KAAmC,CAAvC,EAA0C;AACtC,WAAOE,SAAS,CAACG,MAAV,CAAiBR,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBK,gBAAgB,CAACL,EAA9D,CAAP;AACH;;AAED,SAAOI,SAAS,CAACH,GAAV,CAAcF,QAAQ,IACzBA,QAAQ,CAACC,EAAT,KAAgBK,gBAAgB,CAACL,EAAjC,GACM,EAAE,GAAGD,QAAL;AAAeG,IAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AAA7C,GADN,GAEMH,QAHH,CAAP;AAKH,CAdM","sourcesContent":["export const addItemToCart = (allExistingCartItems, cartItemToAdd) => {\n    const doesCartItemExist = allExistingCartItems.find(\n        cartItem => cartItem.id === cartItemToAdd.id\n    );\n\n    if (doesCartItemExist) {\n        return allExistingCartItems.map(cartItem =>\n            cartItem.id === cartItemToAdd.id ? { ...cartItem, quantity: cartItem.quantity + 1 }\n                : cartItem\n        );\n    }\n\n    return [...allExistingCartItems, { ...cartItemToAdd, quantity: 1 }];\n};\n\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\n    const existingCartItemFound = cartItems.find(\n        cartItem => cartItem.id === cartItemToRemove.id\n    );\n\n    if (existingCartItemFound.quantity === 1) {\n        return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id);\n    }\n\n    return cartItems.map(cartItem =>\n        cartItem.id === cartItemToRemove.id\n            ? { ...cartItem, quantity: cartItem.quantity - 1 }\n            : cartItem\n        );\n};"]},"metadata":{},"sourceType":"module"}