{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      // console.log(\"snapshot: \",snapshot);\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot); // console.log(\"collectionsMap: \", collectionsMap);\n      // updateCollections(collectionsMap);\n\n      dispatch(fetchCollectionsSuccess(collectionsMap)); // this.setState({ loading: false });\n    }).catch(error => dispatch(fetchCollectionsFailure(error)));\n  };\n};","map":{"version":3,"sources":["/Users/khairul/Documents/Projects/crn/crown-clothing/client/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AACxCC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADkB,CAAP,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAGC,cAAc,KAAK;AACtDH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ,yBADgC;AAEtDC,EAAAA,OAAO,EAAEF;AAF6C,CAAL,CAA9C;AAKP,OAAO,MAAMG,uBAAuB,GAAGC,YAAY,KAAK;AACpDP,EAAAA,IAAI,EAAEJ,eAAe,CAACY,yBAD8B;AAEpDH,EAAAA,OAAO,EAAEE;AAF2C,CAAL,CAA5C;AAKP,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAC5C,SAAOC,QAAQ,IAAI;AACf,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AAEAF,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AAEAY,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACjC;AACA,YAAMZ,cAAc,GAAGL,+BAA+B,CAACiB,QAAD,CAAtD,CAFiC,CAGjC;AACA;;AACAL,MAAAA,QAAQ,CAACR,uBAAuB,CAACC,cAAD,CAAxB,CAAR,CALiC,CAMjC;AACH,KAPD,EAOGa,KAPH,CAOSC,KAAK,IAAEP,QAAQ,CAACJ,uBAAuB,CAACW,KAAD,CAAxB,CAPxB;AAQH,GAbD;AAcH,CAfM","sourcesContent":["import ShopActionTypes from './shop.types';\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\n\nexport const fetchCollectionsStart = () => ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\n\nexport const fetchCollectionsSuccess = collectionsMap => ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n    payload: collectionsMap\n});\n\nexport const fetchCollectionsFailure = errorMessage => ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n    payload: errorMessage\n});\n\nexport const fetchCollectionsStartAsync = () => { \n    return dispatch => {\n        const collectionRef = firestore.collection('collections');\n\n        dispatch(fetchCollectionsStart());\n\n        collectionRef.get().then(snapshot => { \n            // console.log(\"snapshot: \",snapshot);\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n            // console.log(\"collectionsMap: \", collectionsMap);\n            // updateCollections(collectionsMap);\n            dispatch(fetchCollectionsSuccess(collectionsMap));\n            // this.setState({ loading: false });\n        }).catch(error=>dispatch(fetchCollectionsFailure(error)));\n    }\n};\n"]},"metadata":{},"sourceType":"module"}