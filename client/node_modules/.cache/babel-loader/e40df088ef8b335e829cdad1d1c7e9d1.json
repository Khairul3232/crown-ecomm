{"ast":null,"code":"import { takeEvery } from 'redux-saga/effects';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  yield console.log('I am HERE'); // const collectionRef = firestore.collection('collections');\n  // dispatch(fetchCollectionsStart());\n  // collectionRef.get().then(snapshot => { \n  //     // console.log(\"snapshot: \",snapshot);\n  //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //     // console.log(\"collectionsMap: \", collectionsMap);\n  //     // updateCollections(collectionsMap);\n  //     dispatch(fetchCollectionsSuccess(collectionsMap));\n  //     // this.setState({ loading: false });\n  // }).catch(error=>dispatch(fetchCollectionsFailure(error)));\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/khairul/Documents/Projects/crn/crown-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","ShopActionTypes","fetchCollectionsAsync","console","log","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMC,OAAO,CAACC,GAAR,CAAY,WAAZ,CAAN,CADqC,CAIjC;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEP;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAML,SAAS,CAACC,eAAe,CAACK,uBAAjB,EAAyCJ,qBAAzC,CAAf;AACH","sourcesContent":["import { takeEvery } from 'redux-saga/effects';\n\nimport ShopActionTypes from './shop.types';\n\nexport function* fetchCollectionsAsync() {\n    yield console.log('I am HERE');\n\n\n        // const collectionRef = firestore.collection('collections');\n\n        // dispatch(fetchCollectionsStart());\n\n        // collectionRef.get().then(snapshot => { \n        //     // console.log(\"snapshot: \",snapshot);\n        //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n        //     // console.log(\"collectionsMap: \", collectionsMap);\n        //     // updateCollections(collectionsMap);\n        //     dispatch(fetchCollectionsSuccess(collectionsMap));\n        //     // this.setState({ loading: false });\n        // }).catch(error=>dispatch(fetchCollectionsFailure(error)));\n    \n}\n\nexport function* fetchCollectionsStart() {\n    yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START,fetchCollectionsAsync);\n}"]},"metadata":{},"sourceType":"module"}